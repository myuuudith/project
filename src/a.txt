// const [data, setData] =  useState([]);
  // const [User, setUser] = useState('');
  // const [Like, setLike] = useState(1);
  // const [Authentication, setAuthentication] = useState();
  // const [image, setImage] = useState();
  
  // const [UserEdit, setUserEdit] = useState('');
  // const [LikeEdit, setLikeEdit] = useState(1);
  // const [AuthenticationEdit, setAuthenticationEdit] = useState();
  // const [imageEdit, setImageEdit] = useState();
  // const [show, setShow] = useState(false);
  
  // const handleClose = () => setShow(false);
  // const handleShow = (id) => setShow(id);
  

  // const getData = () => {
  //   Axios({
  //     method: 'get',
  //     url: 'https://api-bootcamp.do.dibimbing.id',
  //   })
  //   .then(function (response) {
  //     setData(response.data.data)
  //   });
  // }
  // // const handleEdit = () => {
  // //   Axios ({
  // //     method: 'put',
  // //     url: `https://api-bootcamp.do.dibimbing.id/api/v1/like`,
  // //     data: {
  // //       User: UserEdit,
  // //       Authentication: AuthenticationEdit,
  // //       image: imageEdit,
  // //       Like: LikeEdit
  // //     }
  // //   })
  // //   .then(function (response) {
  // //     handleClose()
  // //     setUserEdit('')
  // //     setLikeEdit(1)
  // //     setAuthenticationEdit('')
  // //     setImageEdit('')
  // //     getData()
  // //   });
  // // }
  
  //   const handleAdd = (e) => {
  //     e.preventDefault()
  //     Axios ({
  //       method: 'post',
  //       url: 'https://api-bootcamp.do.dibimbing.id/api/v1/create-food',
  //       data: {
  //       User: User,
  //       Authentication: Authentication,
  //       image: image,
  //       Like: Like,
  //       }
  //     })
  //     .then(function (response) {
  //       // console.log(response);
  //       setUser('')
  //       setLike('')
  //       setAuthentication('')
  //       setImage('')
  //       getData()
  //     });
  //   }
  
  //   const handleDelete = (id) => {
  //     if (window.confirm(`Delete ID ${id}?`)) {
  //     Axios ({
  //       method: 'post',
  //       url: `https://api-bootcamp.do.dibimbing.id/api/v1/delete-food/efdd307b-1d9c-4a47-9d40-d3720708711f`,})
  //     .then(function (response) {
  //       getData()
  //     });
  //   }
  //   }

  // useEffect(() => {
  //   getData()
  //  }, []);

  //  return (
  //   <>
  //   <Form onSubmit={handleAdd}>
  //     <Form.Group className="mb-3" controlId="formBasicName">
  //       <Form.Label>User</Form.Label>
  //       <Form.Control value={User} name="user" type="text" onChange={(e) => setUser(e.target.value)} placeholder="user name" />
  //     </Form.Group>

  //     <Form.Group className="mb-3" controlId="formBasicLike">
  //       <Form.Label>Like</Form.Label>
  //       <Form.Control value={Like} name="like" type="number" onChange={(e) => setLike(e.target.value)} />
  //     </Form.Group>

  //     <Form.Group className="mb-3" controlId="formBasicDescription">
  //       <Form.Label>Authentication</Form.Label>
  //       <Form.Control value={Authentication} name="Authentication" type="text" onChange={(e) => setAuthentication(e.target.value)} />
  //     </Form.Group>

  //     <Form.Group className="mb-3" controlId="formBasicImage">
  //       <Form.Label>Image</Form.Label>
  //       <Form.Control value={image} name="image" type="text" onChange={(e) => setImage(e.target.value)}placeholder="Enter Url Image" />
  //     </Form.Group>

  //     <Button variant="primary" type="submit">
  //       Submit
  //     </Button>
  //   </Form>
  //   <br>
  //   </br>

  //   {/* <Button size="sm" variant="primary" onClick={handleAdd}>Add</Button> */}
  //   <Table striped bordered hover variant="dark">
  //   <thead>
  //     <tr>
  //       <th>a</th>
  //       <th>User</th>
  //       <th>Like</th>
  //       <th>Authentication</th>
  //       <th>Image URL</th>
  //       <th>Action</th>
  //     </tr>
  //   </thead>
  //   <tbody>
  //   {data.map((item, index) => {
  //     return <tr key={index}>
  //       <td>{index + 1}</td>
  //       <td>{item.User}</td>
  //       <td>{item.Like}</td>
  //       <td>{item.Authentication}</td>
  //       <td>{item.image}</td>
  //       <td><ButtonGroup aria-label="Action">
  //     <Button size="sm" variant="primary" onClick={() => handleShow(item.id)}>Edit</Button>
  //     <Button size="sm" variant="danger" onClick={() => handleDelete(item.id)}>Delete</Button>
  //   </ButtonGroup></td>
  //     </tr>
  //   })}
  //   </tbody>
  // </Table>
  // <Modal show={show} onHide={handleClose}>
  //       <Modal.Header closeButton>
  //         <Modal.Title>Edit</Modal.Title>
  //       </Modal.Header>
  //       <Modal.Body>
  //         <Form>
  //           <Form.Group className="mb-3" controlId="formBasicUser">
  //             <Form.Label>User</Form.Label>
  //             <Form.Control value={UserEdit} type="text" onChange={(e) => setUserEdit(e.target.value)} />
  //           </Form.Group>

  //           <Form.Group className="mb-3" controlId="formBasicLike">
  //             <Form.Label>Like</Form.Label>
  //             <Form.Control value={LikeEdit} type="number" onChange={(e) => setLikeEdit(e.target.value)} />
  //           </Form.Group>

  //           <Form.Group className="mb-3" controlId="formBasicAuthentication">
  //             <Form.Label>Authentication</Form.Label>
  //             <Form.Control value={AuthenticationEdit} type="text" onChange={(e) => setAuthenticationEdit(e.target.value)}  />
  //           </Form.Group>

  //           <Form.Group className="mb-3" controlId="formBasicImage">
  //             <Form.Label>Image</Form.Label>
  //             <Form.Control value={imageEdit} type="text" onChange={(e) => setImageEdit(e.target.value)} placeholder="Enter Image" />
  //           </Form.Group>
  //         </Form>
  //       </Modal.Body>
  //       <Modal.Footer>
  //         <Button variant="secondary" onClick={handleClose}>
  //           Close
  //         </Button>
  //         {/* <Button variant="primary" onClick={handleEdit}>
  //           Save Changes
  //         </Button> */}
  //       </Modal.Footer>
  //     </Modal>
  //   </>

  //   )
-------------------------------------------------

  {/* <div class="signin-container">
              <div style="display:flex; justify-content:space-between;">
                <div class="signin-title">Account</div>
                <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
                style="position: relative;
                bottom: 35px;
                left: 15px;"
              ></button>
              </div>
              <div class="mb-24">
                <input
                  class="input-email"
                  type="text"
                  placeholder="Enter nickname or Email"
                />
              </div>
              <div
                class="form-check form-switch mb-24"
                style="display: flex; justify-content: center"
              >
                <input
                  class="form-check-input"
                  type="checkbox"
                  role="switch"
                  id="flexSwitchCheckDefault"
                />
                <label
                  class="form-check-label"
                  for="flexSwitchCheckDefault"
                  style="padding-left: 10px"
                  >Keep me Signed in</label
                >
            </div>
              <button type="button" class="btn btn-secondary signin-btn mb-24">
                Sign in
              </button>
              
              <button type="button" class="btn btn-light signup-btn mb-24">
                Sign up
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

      <div class="feedback-form">
        <div class="contact-sec">
          <div class="contact-info">
            <div><i class="bi bi-geo-alt"></i> Address
            <p>London Bridge, Jakarta, Australia</p></div>
            <div><i class="bi bi-inbox"></i> Mail</div>
            <p>Londontrilia@feedback.com</p>
            <div><i class="bi bi-telephone-forward-fill"></i> Phone
            <p>+01 092 9283661</p></div>
          </div>
          </div>
        
          <div class="contact-form">
            <h2 class="contact-us">Contact Us</h2>
            <form class="contact" action="" method="post"></form>
            <input type="text" name="name" class="text-box" placeholder="Your name" required>
            <input type="email" name="email" class="text-box" placeholder="Your Email" required><br>
          <textarea name="Message" rows="5" cols="80" placeholder="Input Your Feedback" required></textarea><br>
          <input type="submit"  name="submit" class="send-btn" value="send">
          </div>
        
        </div>
        </div>
        </div> */}
